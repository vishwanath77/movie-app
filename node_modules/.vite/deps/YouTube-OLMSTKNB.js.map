{
  "version": 3,
  "sources": ["../../react-player/lib/players/YouTube.js"],
  "sourcesContent": ["var __create = Object.create;\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __getProtoOf = Object.getPrototypeOf;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\r\n  // If the importer is in node compatibility mode or this is not an ESM\r\n  // file that has been converted to a CommonJS file using a Babel-\r\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\r\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\r\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\r\n  mod\r\n));\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nvar YouTube_exports = {};\r\n__export(YouTube_exports, {\r\n  default: () => YouTube\r\n});\r\nmodule.exports = __toCommonJS(YouTube_exports);\r\nvar import_react = __toESM(require(\"react\"));\r\nvar import_utils = require(\"../utils\");\r\nvar import_patterns = require(\"../patterns\");\r\nconst SDK_URL = \"https://www.youtube.com/iframe_api\";\r\nconst SDK_GLOBAL = \"YT\";\r\nconst SDK_GLOBAL_READY = \"onYouTubeIframeAPIReady\";\r\nconst MATCH_PLAYLIST = /[?&](?:list|channel)=([a-zA-Z0-9_-]+)/;\r\nconst MATCH_USER_UPLOADS = /user\\/([a-zA-Z0-9_-]+)\\/?/;\r\nconst MATCH_NOCOOKIE = /youtube-nocookie\\.com/;\r\nconst NOCOOKIE_HOST = \"https://www.youtube-nocookie.com\";\r\nclass YouTube extends import_react.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\r\n    __publicField(this, \"parsePlaylist\", (url) => {\r\n      if (url instanceof Array) {\r\n        return {\r\n          listType: \"playlist\",\r\n          playlist: url.map(this.getID).join(\",\")\r\n        };\r\n      }\r\n      if (MATCH_PLAYLIST.test(url)) {\r\n        const [, playlistId] = url.match(MATCH_PLAYLIST);\r\n        return {\r\n          listType: \"playlist\",\r\n          list: playlistId.replace(/^UC/, \"UU\")\r\n        };\r\n      }\r\n      if (MATCH_USER_UPLOADS.test(url)) {\r\n        const [, username] = url.match(MATCH_USER_UPLOADS);\r\n        return {\r\n          listType: \"user_uploads\",\r\n          list: username\r\n        };\r\n      }\r\n      return {};\r\n    });\r\n    __publicField(this, \"onStateChange\", (event) => {\r\n      const { data } = event;\r\n      const { onPlay, onPause, onBuffer, onBufferEnd, onEnded, onReady, loop, config: { playerVars, onUnstarted } } = this.props;\r\n      const { UNSTARTED, PLAYING, PAUSED, BUFFERING, ENDED, CUED } = window[SDK_GLOBAL].PlayerState;\r\n      if (data === UNSTARTED)\r\n        onUnstarted();\r\n      if (data === PLAYING) {\r\n        onPlay();\r\n        onBufferEnd();\r\n      }\r\n      if (data === PAUSED)\r\n        onPause();\r\n      if (data === BUFFERING)\r\n        onBuffer();\r\n      if (data === ENDED) {\r\n        const isPlaylist = !!this.callPlayer(\"getPlaylist\");\r\n        if (loop && !isPlaylist) {\r\n          if (playerVars.start) {\r\n            this.seekTo(playerVars.start);\r\n          } else {\r\n            this.play();\r\n          }\r\n        }\r\n        onEnded();\r\n      }\r\n      if (data === CUED)\r\n        onReady();\r\n    });\r\n    __publicField(this, \"mute\", () => {\r\n      this.callPlayer(\"mute\");\r\n    });\r\n    __publicField(this, \"unmute\", () => {\r\n      this.callPlayer(\"unMute\");\r\n    });\r\n    __publicField(this, \"ref\", (container) => {\r\n      this.container = container;\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.onMount && this.props.onMount(this);\r\n  }\r\n  getID(url) {\r\n    if (!url || url instanceof Array || MATCH_PLAYLIST.test(url)) {\r\n      return null;\r\n    }\r\n    return url.match(import_patterns.MATCH_URL_YOUTUBE)[1];\r\n  }\r\n  load(url, isReady) {\r\n    const { playing, muted, playsinline, controls, loop, config, onError } = this.props;\r\n    const { playerVars, embedOptions } = config;\r\n    const id = this.getID(url);\r\n    if (isReady) {\r\n      if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {\r\n        this.player.loadPlaylist(this.parsePlaylist(url));\r\n        return;\r\n      }\r\n      this.player.cueVideoById({\r\n        videoId: id,\r\n        startSeconds: (0, import_utils.parseStartTime)(url) || playerVars.start,\r\n        endSeconds: (0, import_utils.parseEndTime)(url) || playerVars.end\r\n      });\r\n      return;\r\n    }\r\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, (YT) => YT.loaded).then((YT) => {\r\n      if (!this.container)\r\n        return;\r\n      this.player = new YT.Player(this.container, {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        videoId: id,\r\n        playerVars: {\r\n          autoplay: playing ? 1 : 0,\r\n          mute: muted ? 1 : 0,\r\n          controls: controls ? 1 : 0,\r\n          start: (0, import_utils.parseStartTime)(url),\r\n          end: (0, import_utils.parseEndTime)(url),\r\n          origin: window.location.origin,\r\n          playsinline: playsinline ? 1 : 0,\r\n          ...this.parsePlaylist(url),\r\n          ...playerVars\r\n        },\r\n        events: {\r\n          onReady: () => {\r\n            if (loop) {\r\n              this.player.setLoop(true);\r\n            }\r\n            this.props.onReady();\r\n          },\r\n          onPlaybackRateChange: (event) => this.props.onPlaybackRateChange(event.data),\r\n          onPlaybackQualityChange: (event) => this.props.onPlaybackQualityChange(event),\r\n          onStateChange: this.onStateChange,\r\n          onError: (event) => onError(event.data)\r\n        },\r\n        host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : void 0,\r\n        ...embedOptions\r\n      });\r\n    }, onError);\r\n    if (embedOptions.events) {\r\n      console.warn(\"Using `embedOptions.events` will likely break things. Use ReactPlayer\\u2019s callback props instead, eg onReady, onPlay, onPause\");\r\n    }\r\n  }\r\n  play() {\r\n    this.callPlayer(\"playVideo\");\r\n  }\r\n  pause() {\r\n    this.callPlayer(\"pauseVideo\");\r\n  }\r\n  stop() {\r\n    if (!document.body.contains(this.callPlayer(\"getIframe\")))\r\n      return;\r\n    this.callPlayer(\"stopVideo\");\r\n  }\r\n  seekTo(amount, keepPlaying = false) {\r\n    this.callPlayer(\"seekTo\", amount);\r\n    if (!keepPlaying && !this.props.playing) {\r\n      this.pause();\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.callPlayer(\"setVolume\", fraction * 100);\r\n  }\r\n  setPlaybackRate(rate) {\r\n    this.callPlayer(\"setPlaybackRate\", rate);\r\n  }\r\n  setLoop(loop) {\r\n    this.callPlayer(\"setLoop\", loop);\r\n  }\r\n  getDuration() {\r\n    return this.callPlayer(\"getDuration\");\r\n  }\r\n  getCurrentTime() {\r\n    return this.callPlayer(\"getCurrentTime\");\r\n  }\r\n  getSecondsLoaded() {\r\n    return this.callPlayer(\"getVideoLoadedFraction\") * this.getDuration();\r\n  }\r\n  render() {\r\n    const { display } = this.props;\r\n    const style = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      display\r\n    };\r\n    return /* @__PURE__ */ import_react.default.createElement(\"div\", { style }, /* @__PURE__ */ import_react.default.createElement(\"div\", { ref: this.ref }));\r\n  }\r\n}\r\n__publicField(YouTube, \"displayName\", \"YouTube\");\r\n__publicField(YouTube, \"canPlay\", import_patterns.canPlay.youtube);\r\n"],
  "mappings": "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",
  "names": []
}
